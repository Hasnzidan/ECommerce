@model IEnumerable<Product>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<div class="container mt-5">
    <h2>Our Products</h2>
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var product in Model)
        {
            <div class="col">
                <div class="card h-100">
                    <img src="/@product.Photo" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="h5 mb-0">@product.Price.ToString("0.00")</span>
                            <div>
                                <a href="@Url.Action("Item", "Home", new { id = product.Id })" class="btn btn-primary me-2">
                                    <i class="bi bi-info-circle"></i> Details
                                </a>
                                <button class="btn btn-success" onclick="addToCart(@product.Id)">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        async function addToCart(productId) {
            try {
                const response = await fetch('/Cart/AddToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': '@token'
                    },
                    body: JSON.stringify({ productId: productId, quantity: 1 })
                });

                const result = await response.json();
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Product added to cart',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Failed to add product to cart'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while adding the product to cart'
                });
            }
        }
    </script>
}
