@model IEnumerable<WebApplication1.Models.Product>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject Microsoft.AspNetCore.Identity.SignInManager<Microsoft.AspNetCore.Identity.IdentityUser> SignInManager
@{
    ViewData["Title"] = "Home";
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<!-- Hero Section -->
<section id="hero" class="d-flex align-items-center">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 d-flex flex-column justify-content-center pt-4 pt-lg-0 order-2 order-lg-1">
                <h1>Welcome to TP-TECH</h1>
                <h2>Your one-stop shop for all tech needs</h2>
                <div class="d-flex justify-content-center justify-content-lg-start">
                    <a href="#categories" class="btn-get-started scrollto">Browse Categories</a>
                    <a href="#featured-products" class="btn-watch-video scrollto">View Products</a>
                </div>
            </div>
            <div class="col-lg-6 order-1 order-lg-2 hero-img">
                <img src="/assets/img/hero-img.png" class="img-fluid animated" alt="">
            </div>
        </div>
    </div>
</section>

<main id="main">
    <!-- Categories Section -->
    <section id="categories" class="categories section-bg">
        <div class="container">
            <div class="section-title">
                <h2>Categories</h2>
                <p>Browse our product categories to find what you need</p>
            </div>

            <div class="row">
                @foreach (var category in ViewBag.Categories)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="category-card">
                            <div class="category-img">
                                @if (!string.IsNullOrEmpty(category.Photo))
                                {
                                    <img src="/@category.Photo" class="img-fluid" alt="@category.Name">
                                }
                                else
                                {
                                    <img src="/images/default-category.jpg" class="img-fluid" alt="@category.Name">
                                }
                            </div>
                            <div class="category-info">
                                <h4>@category.Name</h4>
                                <p>@category.Description</p>
                                <a href="@Url.Action("Category", "Home", new { categoryId = category.Id })" class="btn btn-primary">
                                    View Products <i class="bi bi-arrow-right"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>

    <!-- Featured Products Section -->
    <section id="featured-products" class="featured-products">
        <div class="container">
            <div class="section-title">
                <h2>Featured Products</h2>
                <p>Check out our latest and most popular products</p>
            </div>

            <div class="row">
                @foreach (var product in Model)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                        <div class="product-card">
                            <div class="product-img">
                                @if (!string.IsNullOrEmpty(product.Photo))
                                {
                                    <img src="/@product.Photo" class="img-fluid" alt="@product.Name">
                                }
                                else
                                {
                                    <img src="/images/default-product.jpg" class="img-fluid" alt="@product.Name">
                                }
                                @if (product.OldPrice.HasValue && product.OldPrice > product.Price)
                                {
                                    <div class="discount-badge">
                                        @{
                                            var discountPercentage = ((product.OldPrice - product.Price) / product.OldPrice * 100)?.ToString("0");
                                        }
                                        -@discountPercentage%
                                    </div>
                                }
                            </div>
                            <div class="product-info">
                                <h4><a href="@Url.Action("Item", "Home", new { id = product.Id })">@product.Name</a></h4>
                                <p class="description">@(string.IsNullOrEmpty(product.Description) ? "No description available" : product.Description)</p>
                                <div class="price-container">
                                    @if (product.OldPrice.HasValue && product.OldPrice > product.Price)
                                    {
                                        <span class="old-price">$@product.OldPrice?.ToString("0.00")</span>
                                    }
                                    <span class="current-price">$@product.Price?.ToString("0.00")</span>
                                </div>
                                <div class="product-actions">
                                    @if (SignInManager.IsSignedIn(User))
                                    {
                                        <button class="btn btn-primary add-to-cart" onclick="addToCart(@product.Id, 1)">
                                            <i class="bi bi-cart-plus"></i> Add to Cart
                                        </button>
                                    }
                                    else
                                    {
                                        <a href="/Identity/Account/Login" class="btn btn-primary">
                                            <i class="bi bi-cart-plus"></i> Login to Add
                                        </a>
                                    }
                                    <a href="@Url.Action("Item", "Home", new { id = product.Id })" class="btn btn-outline-primary">
                                        <i class="bi bi-eye"></i> Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>

    <!-- Newsletter Section -->
    <section id="newsletter" class="newsletter section-bg">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="newsletter-content text-center">
                        <h2>Stay Updated</h2>
                        <p>Subscribe to our newsletter for the latest products and exclusive offers</p>
                        <form class="newsletter-form">
                            <div class="input-group">
                                <input type="email" class="form-control" placeholder="Enter your email">
                                <button class="btn btn-primary" type="submit">Subscribe</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- Toast Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
</div>

@section Scripts {
    <script>
        function addToCart(productId, quantity) {
            $.ajax({
                url: '/Cart/AddToCart',
                type: 'POST',
                data: {
                    productId: productId,
                    quantity: quantity,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Product added to cart successfully',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(function() {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message || 'Failed to add product to cart'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred while adding the product to cart'
                    });
                }
            });
        }
    </script>
}
