@model WebApplication1.Models.Product
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = Model.Name;
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<input type="hidden" id="antiforgeryToken" value="@token" />

<main id="main">
    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumb-section">
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    @if (Model.Category != null)
                    {
                        <li class="breadcrumb-item">
                            <a href="@Url.Action("Category", "Home", new { categoryId = Model.Category.Id })">@Model.Category.Name</a>
                        </li>
                    }
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>
        </div>
    </section>

    <!-- ======= Product Details Section ======= -->
    <section class="product-details-section py-5">
        <div class="container">
            <div class="row g-4">
                <!-- Product Gallery -->
                <div class="col-lg-6">
                    <div class="product-gallery card shadow-sm">
                        <div class="main-image p-3">
                            @if (!string.IsNullOrEmpty(Model.Photo))
                            {
                                <img src="/@Model.Photo" alt="@Model.Name" class="img-fluid rounded main-product-image">
                            }
                            else
                            {
                                <img src="/images/default-product.jpg" alt="@Model.Name" class="img-fluid rounded main-product-image">
                            }
                        </div>
                        
                        @if (Model.ProductImage != null && Model.ProductImage.Any())
                        {
                            <div class="thumbnails p-3 pt-0">
                                <div class="row g-2">
                                    @foreach (var image in Model.ProductImage)
                                    {
                                        <div class="col-3">
                                            <img src="/@image.ImagePath" alt="@Model.Name" class="img-fluid rounded thumbnail"
                                                 onclick="updateMainImage(this.src)">
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Product Info -->
                <div class="col-lg-6">
                    <div class="product-info">
                        <div class="card shadow-sm mb-4">
                            <div class="card-body">
                                <h1 class="product-title mb-3">@Model.Name</h1>
                                
                                <div class="product-price mb-4">
                                    <span class="price">@Model.Price.ToString("C")</span>
                                </div>

                                <div class="product-meta mb-4">
                                    @if (Model.Category != null)
                                    {
                                        <div class="category d-flex align-items-center mb-2">
                                            <i class="bi bi-tag me-2"></i>
                                            <span class="text-muted">Category:</span>
                                            <a href="@Url.Action("Category", "Home", new { categoryId = Model.Category.Id })" 
                                               class="ms-2">@Model.Category.Name</a>
                                        </div>
                                    }
                                    <div class="sku d-flex align-items-center">
                                        <i class="bi bi-upc me-2"></i>
                                        <span class="text-muted">SKU:</span>
                                        <span class="ms-2">@Model.Id</span>
                                    </div>
                                </div>

                                <div class="product-description mb-4" style="display: contents;">
                                    <h5 class="description-title mb-3">
                                        <i class="bi bi-info-circle me-2"></i>Description
                                    </h5>
                                    <div class="description-content">
                                        @if (!string.IsNullOrEmpty(Model.Description))
                                        {
                                            <p class="mb-0">@Model.Description</p>
                                        }
                                        else
                                        {
                                            <p class="text-muted mb-0">No description available</p>
                                        }
                                    </div>
                                </div>

                                <div class="product-actions">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <div class="quantity-selector mb-3">
                                            <label for="quantity" class="form-label">Quantity:</label>
                                            <div class="input-group" style="width: 140px;">
                                                <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(-1)">
                                                    <i class="bi bi-dash"></i>
                                                </button>
                                                <input type="number" class="form-control text-center" id="quantity" value="1" min="1" max="99">
                                                <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(1)">
                                                    <i class="bi bi-plus"></i>
                                                </button>
                                            </div>
                                        </div>

                                        <button class="btn btn-primary btn-lg w-100 add-to-cart" onclick="addToCart(@Model.Id)">
                                            <i class="bi bi-cart-plus me-2"></i>Add to Cart
                                        </button>
                                    }
                                    else
                                    {
                                        <a href="/Identity/Account/Login" class="btn btn-primary btn-lg w-100">
                                            <i class="bi bi-box-arrow-in-right me-2"></i>Login to Add to Cart
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Additional Info Cards -->
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="card shadow-sm text-center p-3">
                                    <i class="bi bi-truck fs-3 mb-2 text-primary"></i>
                                    <h6 class="mb-1">Free Shipping</h6>
                                    <small class="text-muted">On orders over $50</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card shadow-sm text-center p-3">
                                    <i class="bi bi-shield-check fs-3 mb-2 text-primary"></i>
                                    <h6 class="mb-1">Secure Payment</h6>
                                    <small class="text-muted">100% secure payment</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card shadow-sm text-center p-3">
                                    <i class="bi bi-arrow-counterclockwise fs-3 mb-2 text-primary"></i>
                                    <h6 class="mb-1">Easy Returns</h6>
                                    <small class="text-muted">30 day returns</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<link href="~/css/item.css" rel="stylesheet" />

@section Scripts {
    <script>
        function updateMainImage(src) {
            $('.main-product-image').attr('src', src);
        }

        function updateQuantity(change) {
            const quantityInput = $('#quantity');
            let currentValue = parseInt(quantityInput.val());
            let newValue = currentValue + change;
            
            if (newValue >= 1 && newValue <= 99) {
                quantityInput.val(newValue);
            }
        }

        async function addToCart(productId) {
            try {
                const quantity = parseInt($('#quantity').val());
                if (isNaN(quantity) || quantity < 1) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Quantity',
                        text: 'Please enter a valid quantity'
                    });
                    return;
                }

                const response = await fetch('@Url.Action("AddToCart", "Cart")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('#antiforgeryToken').val()
                    },
                    body: JSON.stringify({ productId, quantity })
                });

                const result = await response.json();
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart!',
                        text: 'Product has been added to your cart',
                        showConfirmButton: false,
                        timer: 1500
                    });

                    // Update cart count in navbar if you have one
                    updateCartCount();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: result.message || 'Failed to add product to cart'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred while adding the product to cart'
                });
            }
        }

        async function updateCartCount() {
            try {
                const response = await fetch('@Url.Action("GetCartCount", "Cart")');
                const count = await response.json();
                $('.cart-count').text(count);
            } catch (error) {
                console.error('Error updating cart count:', error);
            }
        }

        // Initialize quantity input validation
        $(document).ready(function() {
            $('#quantity').on('input', function() {
                let value = parseInt($(this).val());
                if (isNaN(value) || value < 1) {
                    $(this).val(1);
                } else if (value > 99) {
                    $(this).val(99);
                }
            });
        });
    </script>
}