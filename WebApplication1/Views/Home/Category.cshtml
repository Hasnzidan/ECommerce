@model IEnumerable<WebApplication1.Models.Product>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = ViewBag.CategoryName ?? "Products";
    var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<!-- Category Header -->
<section class="category-header section-padding">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@(ViewBag.CategoryName ?? "All Products")</li>
                    </ol>
                </nav>
                <h1 class="category-title">@(ViewBag.CategoryName ?? "All Products")</h1>
                @if (!string.IsNullOrEmpty(ViewBag.CategoryDescription))
                {
                    <p class="category-description">@ViewBag.CategoryDescription</p>
                }
            </div>
        </div>
    </div>
</section>

<!-- Products Grid -->
<section class="products-grid section-padding">
    <div class="container">
        <div class="row" id="productsContainer">
            @foreach (var product in Model)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                    <div class="product-card">
                        <div class="product-img">
                            @if (!string.IsNullOrEmpty(product.Photo))
                            {
                                <img src="/@product.Photo" class="img-fluid" alt="@product.Name">
                            }
                            else
                            {
                                <img src="/images/default-product.jpg" class="img-fluid" alt="@product.Name">
                            }
                            @if (product.OldPrice.HasValue && product.OldPrice > product.Price)
                            {
                                <div class="discount-badge">
                                    @{
                                        var discountPercentage = ((product.OldPrice - product.Price) / product.OldPrice * 100)?.ToString("0");
                                    }
                                    -@discountPercentage%
                                </div>
                            }
                        </div>
                        <div class="product-info">
                            <h4><a href="@Url.Action("Item", "Home", new { id = product.Id })">@product.Name</a></h4>
                            <p class="description">@(string.IsNullOrEmpty(product.Description) ? "No description available" : product.Description)</p>
                            <div class="product-price">
                                <span class="price">@product.Price.ToString("C")</span>
                            </div>
                            <div class="product-actions">
                                <button class="btn btn-primary add-to-cart" onclick="addToCart(@product.Id, 1)">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                                <a href="@Url.Action("Item", "Home", new { id = product.Id })" class="btn btn-outline-primary">
                                    <i class="bi bi-eye"></i> Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-box display-1 text-muted"></i>
                <h3 class="mt-3">No Products Found</h3>
                <p class="text-muted">There are currently no products in this category.</p>
            </div>
        }
    </div>
</section>
